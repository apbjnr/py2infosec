#
## Tuple
#

## Tuples are similar to lists but immutable
## Can convert from list to tuple and vice versa
- tuple(list)
- list(tuple()
## video = ("Hellow World", 5, 10, 0)
## sequence unpacking
 - videoName, time, upvotes, downvotes = video

>>> videoData = tuple(["blah Intro", 25, 100, 3])
>>> 
>>> 
>>> videoData
('blah Intro', 25, 100, 3)

>>> 
>>> videoTitle, runningTime, upVotes, downVotes = videoData
>>> 
>>> 
>>> videoTitle
'blah Intro'
>>> runningTime
25
>>> upVotes
100
>>> downVotes
3
>>> 
>>> 

#
## Sets
#

## Unordered collection of unique objects
## List to set: b = set(a)
## Set to list: a = list(b)
## Set Operations
- untion: a|b
- Intersection: a&b
- Difference a-b

## Duplicates removed
>>> setA = set([1,2,3,3,2])
>>> 
>>> setA
set([1, 2, 3])
>>> 
>>> setB = set([3,4,5])
>>> setB
set([3, 4, 5])
>>>
>>> setA|setB
set([1, 2, 3, 4, 5])
>>> 
>>> 
>>> setA&setB
set([3])
>>> 
>>> setA-setB
set([1, 2])
>>> 

#
## Dictionaries
#

## unorded key-value pairs
## keys are unique and immutable objects
## value can change

>>> myBio = { 'name' : 'apb', 'age' : 30, 'hobby' : 'hacking'}
>>> 
>>> myBio
{'hobby': 'hacking', 'age': 30, 'name': 'apb'}
>>> 
>>> myBio.has_key('hobby')
True
>>> 
>>> 'name' in myBio
True
>>> 'names' in myBio
False
>>> 

>>> myBio.keys()
['hobby', 'age', 'name']
>>> 
>>> 
>>> myBio.values()
['hacking', 30, 'apb']
>>> 
>>> myBio.items()
[('hobby', 'hacking'), ('age', 30), ('name', 'apb')]
>>> 
>>> 

>>> myBio.get('age')
30
>>> 
>>> 
>>> myBio['location'] = 'South Africa'
>>> 
>>> myBio
{'hobby': 'hacking', 'age': 30, 'name': 'apb', 'location': 'South Africa'}

>>> myBio
{'hobby': 'hacking', 'age': 30, 'name': 'apb', 'location': 'South Africa'}
>>> 
>>> del myBio['location']
>>> 
>>> myBio
{'hobby': 'hacking', 'age': 30, 'name': 'apb'}
>>> 
>>> 
>>> myBio.clear()
>>> 
>>> myBio
{}

#
## Get quick help in python
#
>>> help(myBio.has_key)
Help on built-in function has_key:

has_key(...)
    D.has_key(k) -> True if D has a key k, else False
>>> 


